SET DEFINE OFF;
/
CREATE OR REPLACE PACKAGE "M_HRTRZ1X" is
-- Site: mo-hafu-hr2401 
-- Author: Nuii Kowit (000551) 
-- Date updated: 19 August 2024 09:40
-- Comment: -

    param_msg_error         varchar2(4000 char);
    global_v_coduser        varchar2(100 char);
    global_v_codempid       varchar2(100 char);
    global_v_lang           varchar2(10 char) := '102';
    global_v_zminlvl        number;
    global_v_zwrklvl        number;
    global_v_zupdsal        varchar2(100 char);
    global_v_numlvlsalst 	  number;
    global_v_numlvlsalen 	  number;
    p_codempid              thistrnn.codempid%type;
    p_codcompy              thisclss.codcompy%type;
    p_dtetrst               thistrnn.dtetrst%type;
    p_dtetren               thistrnn.dtetren%type;
    p_dteyear               thistrnn.dteyear%type;
    p_codcours              thistrnn.codcours%type;
    p_numclseq              thistrnn.numclseq%type;
    p_codapp                varchar2(10 char) := 'HRTRZ1X';
    json_select_arr         json;
    isInsertReport          boolean := false;

    procedure initial_value(json_str_input in clob);
    procedure get_index(json_str_input in clob,json_str_output out clob);
    procedure gen_index(json_str_output out clob);
    procedure gen_thisclss(json_str_output out clob);
    procedure gen_thisclss_sub(json_str_output out clob);
    procedure gen_tcoursugg(json_str_output out clob);
    procedure gen_tcoursadj(json_str_output out clob);
    procedure gen_tcoursrecm(json_str_output out clob);
    procedure gen_report(json_str_input in clob,json_str_output out clob);
    procedure initial_report(json_str in clob);
    procedure clear_ttemprpt;

    procedure insert_ttemprpt_thisclss(obj_data in json); 
    procedure insert_ttemprpt_thisclss_sub(obj_data in json); 
    procedure insert_ttemprpt_tcoursugg(obj_data in json); 
    procedure insert_ttemprpt_tcoursadj(obj_data in json); 
    procedure insert_ttemprpt_tcoursrecm(obj_data in json); 


end M_HRTRZ1X;
/
CREATE OR REPLACE PACKAGE BODY "M_HRTRZ1X" is
-- Site: mo-hafu-hr2401 
-- Author: Nuii Kowit (000551) 
-- Date updated: 19 August 2024 09:40
-- Comment: -

 procedure initial_value(json_str_input in clob) as
    json_obj json;
  begin
    json_obj            := json(json_str_input); 

    global_v_coduser    := json_ext.get_string(json_obj,'p_coduser');
    global_v_lang       := json_ext.get_string(json_obj,'p_lang');


    p_dteyear           := hcm_util.get_string(json_obj,'p_dteyear');
    p_codcours          := hcm_util.get_string(json_obj,'p_codcours');
    p_numclseq          := hcm_util.get_string(json_obj,'p_numclseq');
    p_dtetrst           := to_date(json_ext.get_string(json_obj,'p_dtetrst'),'ddmmyyyy');
    p_dtetren           := to_date(json_ext.get_string(json_obj,'p_dtetren'),'ddmmyyyy');

    hcm_secur.get_global_secur(global_v_coduser,global_v_zminlvl,global_v_zwrklvl,global_v_numlvlsalst,global_v_numlvlsalen);

end initial_value;
----------------------------------------------------------------------------------------
procedure get_index(json_str_input in clob,json_str_output out clob) as
  begin
    initial_value(json_str_input);
  if param_msg_error is null then
    gen_index(json_str_output);
  else
    json_str_output := get_response_message(400,param_msg_error,global_v_lang);
    return;
  end if;
  exception when others then
    param_msg_error := dbms_utility.format_error_stack||' '||dbms_utility.format_error_backtrace;
    json_str_output := get_response_message('400',param_msg_error,global_v_lang);
end get_index;
----------------------------------------------------------------------------------------
  procedure gen_index(json_str_output out clob) as
    obj_data                          json;
    obj_row                           json;
    v_rcnt                            number := 0;
    v_flgsecu                         boolean := false;
    v_flgfound                        boolean := false;

    cursor c_thisclss is
        select codcompy,codcours,numclseq,dtetrst,dtetren,qtyppc,qtyempap,fscore,avgscore,dteyear
        from thisclss
        where dteyear = p_dteyear
        and codcours = nvl(p_codcours, codcours)
        and numclseq = nvl(p_numclseq,numclseq)
        and ( dtetrst between p_dtetrst and p_dtetren
          or dtetren between p_dtetrst and p_dtetren
          or p_dtetrst between p_dtetrst and dtetren
          or p_dtetren between p_dtetrst and dtetren
        )
        order by codcours,numclseq; 


  begin
    obj_row         := json();
    v_rcnt          := 0;
    if p_dtetrst is not null then
      for r_thisclss in c_thisclss loop
        v_flgfound    := true;

          v_rcnt      := v_rcnt+1;
          obj_data    := json();

          obj_data.put('coderror', '200');
          obj_data.put('codcours', r_thisclss.codcours);
          obj_data.put('desc_codcours', get_tcourse_name(r_thisclss.codcours, global_v_lang));
          obj_data.put('numclseq', r_thisclss.numclseq);
          obj_data.put('dtetrst', to_char(r_thisclss.dtetrst, 'dd/mm/yyyy'));
          obj_data.put('dtetren', to_char(r_thisclss.dtetren, 'dd/mm/yyyy'));
          obj_data.put('qtyppc', r_thisclss.qtyppc);
          obj_data.put('qtyempap', r_thisclss.qtyempap);
          obj_data.put('fscore', r_thisclss.fscore);
          obj_data.put('avgscore', r_thisclss.avgscore);
          obj_data.put('codcompy', r_thisclss.codcompy);
          obj_data.put('dteyear', r_thisclss.dteyear);

          obj_row.put(to_char(v_rcnt-1),obj_data);

      end loop;
    end if;

    if v_flgfound then
      if v_rcnt > 0 then
        dbms_lob.createtemporary(json_str_output, true);
        obj_row.to_clob(json_str_output);
      else
        param_msg_error   := get_error_msg_php('HR3007', global_v_lang, 'TUSRPROF');
        json_str_output   := get_response_message(null, param_msg_error, global_v_lang);
      end if;
    else
      param_msg_error   := get_error_msg_php('HR2055', global_v_lang, 'THISTRNN');
      json_str_output   := get_response_message(null, param_msg_error, global_v_lang);
    end if;
  exception when others then
    param_msg_error     := dbms_utility.format_error_stack || ' ' || dbms_utility.format_error_backtrace || '@#$%400';
    json_str_output     := get_response_message('400', param_msg_error, global_v_lang);
end gen_index;
----------------------------------------------------------------------------------------

procedure gen_thisclss(json_str_output out clob) as
    obj_data               json;
    v_codcours             thisclss.codcours%type;
    v_dtetrst              thisclss.dtetrst%type;
    v_dtetren              thisclss.dtetren%type;
    v_timestr              thisclss.timestr%type;
    v_timeend              thisclss.timeend%type;
    v_codhotel             thisclss.codhotel%type;
    v_codinst              tyrtrsch.codinst%type;
    v_codinsts             thisclss.codinsts%type;
    v_qtyppcac             thisclss.qtyppcac%type;
    v_qtyempap             thisclss.qtyempap%type;
    v_accountfor           number;
    v_codform              thisclss.codform%type;
    v_numgrup              number;

  begin
    begin
      select codcours, dtetrst, timestr, timeend, codhotel, codinsts,
      qtyppcac, qtyempap, codform
      into v_codcours, v_dtetrst, v_timestr, v_timeend, v_codhotel, v_codinsts,
      v_qtyppcac, v_qtyempap, v_codform
      from thisclss
        where dteyear = p_dteyear
        and codcompy = p_codcompy
        and codcours = p_codcours
        and numclseq = p_numclseq;
    exception when no_data_found then
        null;
    end;


    begin
      select codinst into v_codinst
        from tyrtrsch
        where dteyear = p_dteyear
        and codcompy = p_codcompy
        and codcours = p_codcours
        and numclseq = p_numclseq;
    exception when no_data_found then
        v_codinst := '';
    end;

    begin
      select numgrup into v_numgrup
      from tcoursapi
      where dteyear = p_dteyear
        and codcompy = p_codcompy
        and codcours = p_codcours
        and numclseq = p_numclseq
        and numgrup = 1
        and ROWNUM = 1
        order by numitem;
    exception when no_data_found then
        v_numgrup := null;
    end;


    obj_data          := json();
    obj_data.put('coderror', '200');
    obj_data.put('course', get_tcourse_name(v_codcours, global_v_lang));
    obj_data.put('date', nvl(TO_CHAR(v_dtetrst, 'FMDay, FMMonth DD, YYYY'),''));
    obj_data.put('duration', case when v_timestr is null then '-' else substr(v_timestr, 1, 2) || ':' || substr(v_timestr, 3, 2) || '-' ||  substr(v_timeend, 1, 2) || ':' || substr(v_timeend, 3, 2) end);
    obj_data.put('vanue', get_thotelif_name(v_codhotel, global_v_lang));
    obj_data.put('trainers', get_tinstruc_name(v_codinst, global_v_lang) || ' / ' || get_tinstitu_name(v_codinsts, global_v_lang));
    obj_data.put('actpartic', TO_CHAR(nvl(v_qtyppcac, 0), 'FM999,999,999'));
    obj_data.put('evalby', TO_CHAR(nvl(v_qtyempap, 0), 'FM999,999,999'));
    obj_data.put('accountfor', CASE WHEN nvl(v_qtyppcac, 0) = 0 THEN 0 ELSE TO_CHAR(((nvl(v_qtyppcac, 0) / nvl(v_qtyempap, 0)) * 100), '999,999,999.00') END || '%');
    obj_data.put('tintvews', get_tintvews_name(v_codform, v_numgrup, global_v_lang));


    if isInsertReport then
      insert_ttemprpt_thisclss(obj_data);
    end if;
    dbms_lob.createtemporary(json_str_output, true);
    obj_data.to_clob(json_str_output);

  exception when others then
    param_msg_error     := dbms_utility.format_error_stack || ' ' || dbms_utility.format_error_backtrace||'777'||SQLERRM;
    json_str_output     := get_response_message('400', param_msg_error, global_v_lang);
  end gen_thisclss;

procedure gen_thisclss_sub(json_str_output out clob) as
    obj_data    json;
    obj_row     json;
    v_rcnt      number := 0;
    v_codform   thisclss.codform%type;


     cursor c1 is
      select *
      from tcoursapi
      where dteyear    = p_dteyear
        and codcompy   = p_codcompy   
        and codcours   = p_codcours
        and numclseq   = p_numclseq
        and numgrup = 1
        order by numitem;


  begin

    begin
      select codform
      into  v_codform
      from thisclss
        where dteyear = p_dteyear
        and codcompy = p_codcompy
        and codcours = p_codcours
        and numclseq = p_numclseq;
    exception when no_data_found then
        null;
    end;

    obj_row     := json();
    for r1 in c1 loop
        v_rcnt      := v_rcnt+1;
        obj_data    := json();


        obj_data.put('coderror', '200'); 

        obj_data.put('no', r1.numitem);
        obj_data.put('topics', get_tintvewd_name(v_codform, r1.numgrup, r1.numitem, global_v_lang));
        obj_data.put('totalscore', r1.qtyfscor);
        obj_data.put('avgscore', r1.qtyscore);

        obj_row.put(to_char(v_rcnt-1),obj_data);

        if isInsertReport then
          insert_ttemprpt_thisclss_sub(obj_data);
        end if;
    end loop;
    dbms_lob.createtemporary(json_str_output, true);
    obj_row.to_clob(json_str_output);
  end gen_thisclss_sub;


----------------------------------------------------------------------------------------
procedure gen_tcoursugg(json_str_output out clob) as
    obj_data    json;
    obj_row     json;
    v_rcnt      number := 0;


    cursor c1 is
    select descomment
    from tcoursugg
    where dteyear = p_dteyear
        and codcompy = p_codcompy
        and codcours = p_codcours
        and numclseq = p_numclseq
    order by numseq;


  begin
    obj_row     := json();
    for r1 in c1 loop
        v_rcnt      := v_rcnt+1;
        obj_data    := json();


        obj_data.put('coderror', '200');

        obj_data.put('descomment', r1.descomment);
        obj_row.put(to_char(v_rcnt-1),obj_data);

        if isInsertReport then
          insert_ttemprpt_tcoursugg(obj_data);
        end if;
    end loop;
    dbms_lob.createtemporary(json_str_output, true);
    obj_row.to_clob(json_str_output);
  end gen_tcoursugg;

  ----------------------------------------------------------------------------------------
procedure gen_tcoursadj(json_str_output out clob) as
    obj_data    json;
    obj_row     json;
    v_rcnt      number := 0;


    cursor c1 is
    select descomment
    from tcoursadj
    where dteyear = p_dteyear
        and codcompy = p_codcompy
        and codcours = p_codcours
        and numclseq = p_numclseq
    order by numseq;


  begin
    obj_row     := json();
    for r1 in c1 loop
        v_rcnt      := v_rcnt+1;
        obj_data    := json();

        obj_data.put('coderror', '200');

        obj_data.put('descomment', r1.descomment);
        obj_row.put(to_char(v_rcnt-1),obj_data);

        if isInsertReport then
          insert_ttemprpt_tcoursadj(obj_data);
        end if;
    end loop;
    dbms_lob.createtemporary(json_str_output, true);
    obj_row.to_clob(json_str_output);
  end gen_tcoursadj;


  procedure gen_tcoursrecm(json_str_output out clob) as
    obj_data    json;
    obj_row     json;
    v_rcnt      number := 0;


    cursor c1 is
    select descomment
    from tcoursrecm
    where dteyear = p_dteyear
        and codcompy = p_codcompy
        and codcours = p_codcours
        and numclseq = p_numclseq
    order by numseq;


  begin
    obj_row     := json();
    for r1 in c1 loop
        v_rcnt      := v_rcnt+1;
        obj_data    := json();

        obj_data.put('coderror', '200');

        obj_data.put('descomment', r1.descomment);
        obj_row.put(to_char(v_rcnt-1),obj_data);

        if isInsertReport then
          insert_ttemprpt_tcoursrecm(obj_data);
        end if;
    end loop;
    dbms_lob.createtemporary(json_str_output, true);
    obj_row.to_clob(json_str_output);
  end gen_tcoursrecm;


procedure initial_report(json_str in clob) is
    json_obj        json;
  begin
    json_obj            := json(json_str);
    global_v_coduser    := hcm_util.get_string(json_obj,'p_coduser');
    global_v_codempid   := hcm_util.get_string(json_obj,'p_codempid');
    global_v_lang       := hcm_util.get_string(json_obj,'p_lang');
    p_codapp            := hcm_util.get_string(json_obj,'p_codapp');

    begin
      json_select_arr   := json(json_obj.get('p_params_select'));
      if json_select_arr.count = 0 then
        json_select_arr := null;
      end if;
    exception when others then
      null;
    end;
  end initial_report;
----------------------------------------------------------------------------------------
procedure gen_report(json_str_input in clob,json_str_output out clob) is
    json_output                     clob;
    p_select_arr                    json;
  begin
    initial_report(json_str_input);
    isInsertReport := true;
    if param_msg_error is null then
      clear_ttemprpt;
      for i in 0..json_select_arr.count-1 loop 
        p_select_arr        := hcm_util.get_json(json_select_arr, to_char(i));
        p_codcompy          := hcm_util.get_string(p_select_arr, 'codcompy');
        p_dteyear           := hcm_util.get_string(p_select_arr, 'dteyear');
        p_codcours          := hcm_util.get_string(p_select_arr, 'codcours');
        p_numclseq          := hcm_util.get_string(p_select_arr, 'numclseq');

        -- gen_thistrnn(json_output);
        gen_thisclss(json_output);
        gen_thisclss_sub(json_output);
        gen_tcoursugg(json_output);
        gen_tcoursadj(json_output);
        gen_tcoursrecm(json_output);
      end loop;
    end if;

    if param_msg_error is null then
      param_msg_error := get_error_msg_php('HR2715',global_v_lang);
      commit;
    else
      rollback;
    end if;
    json_str_output := get_response_message(null,param_msg_error,global_v_lang);
  exception when others then
    param_msg_error := dbms_utility.format_error_stack||' '||dbms_utility.format_error_backtrace;
    json_str_output   := get_response_message('400',param_msg_error,global_v_lang);
  end gen_report;
----------------------------------------------------------------------------------------
procedure clear_ttemprpt is
  begin
    begin
      delete
        from ttemprpt
       where codempid = global_v_codempid
         and upper(codapp) like upper(p_codapp) || '%';
    exception when others then 
      null;
    end;
  end clear_ttemprpt;

----------------------------------------------------------------------------------------
procedure insert_ttemprpt_thisclss(obj_data in json) is
    v_numseq               number := 0;
    v_dtetrst              varchar2(1000 char);
    v_dtetren              varchar2(1000 char);
    v_codhotel             thisclss.codhotel%type;
    v_codcurse             varchar2(200 char);
    v_duration             varchar2(100 char);
    v_vanue                varchar2(100 char);
    v_trainers             varchar2(100 char);
    v_actpartic            varchar2(20);
    v_evalby               varchar2(20);
    v_accountfor           varchar2(20);
    v_tintvews             varchar2(1000);

  begin
    begin
      select nvl(max(numseq), 0)
        into v_numseq
        from ttemprpt
       where codempid = global_v_codempid
         and codapp   = upper(p_codapp)||'_MAIN';
    exception when no_data_found then
      null;
    end;



    v_numseq                     := v_numseq + 1;
    v_codcurse                   := hcm_util.get_string(obj_data, 'course');
    v_dtetrst                    := hcm_util.get_string(obj_data, 'date');
    v_duration                   := hcm_util.get_string(obj_data, 'duration');
    v_vanue                      := hcm_util.get_string(obj_data, 'vanue');
    v_trainers                   := hcm_util.get_string(obj_data, 'trainers');
    v_actpartic                  := hcm_util.get_string(obj_data, 'actpartic');
    v_evalby                     := hcm_util.get_string(obj_data, 'evalby');
    v_accountfor                 := hcm_util.get_string(obj_data, 'accountfor');
    v_tintvews                   := hcm_util.get_string(obj_data, 'tintvews');


    begin
      insert
        into ttemprpt
           (
             codempid, codapp, numseq, item1,
            item2, item3, item4, item5, 
            item6, item7, item8, item9, item10,
            item11, item12, item13, item14
           )
      values
           (
             global_v_codempid, upper(p_codapp)||'_MAIN', v_numseq, '1',
             p_codempid, upper(p_codcours), p_dteyear, p_numclseq,
             v_codcurse, v_dtetrst, v_duration, v_vanue, v_trainers,
             v_actpartic, v_evalby, v_accountfor, v_tintvews
           );
    exception when others then
      null;
    end;
  exception when others then
    param_msg_error := dbms_utility.format_error_stack || ' ' || dbms_utility.format_error_backtrace || '@#$%400';
end insert_ttemprpt_thisclss;

procedure insert_ttemprpt_thisclss_sub(obj_data in json) is
    v_numseq            number := 0;
    v_seq               number := 1;
    v_no                number;
    v_topics            varchar2(200);
    v_totalscore        number;
    v_avgscore          number;

  begin
    begin
      select nvl(max(numseq), 0)
        into v_numseq
        from ttemprpt
       where codempid = global_v_codempid
         and upper(codapp)   = upper(p_codapp)||'_SUB_1';
    exception when no_data_found then
      null;
    end;

    begin
      select nvl(max(item1), 0)
        into v_seq
        from ttemprpt
       where codempid = global_v_codempid
         and codapp   = upper(p_codapp)||'_SUB_1'
         and item3 = p_codcours
         and item4 = p_dteyear
         and item5 = p_numclseq;
    exception when no_data_found then
      null;
    end;
    v_numseq                    := v_numseq + 1;
    v_seq                       := v_seq + 1;
    v_no                        := hcm_util.get_string(obj_data, 'no');
    v_topics                    := hcm_util.get_string(obj_data, 'topics');
    v_totalscore                := hcm_util.get_string(obj_data, 'totalscore');
    v_avgscore                  := hcm_util.get_string(obj_data, 'avgscore');




    begin
      insert
        into ttemprpt
           (
             codempid, codapp, numseq,
             item1, item2, item3, item4, item5,
             item6, item7, item8, item9
           )
      values
           (
             global_v_codempid, upper(p_codapp)||'_SUB_1', v_numseq,
             v_seq, p_codempid, p_codcours, p_dteyear, p_numclseq,
             v_no, v_topics, v_totalscore, v_avgscore
           );
    exception when others then
      null;
    end;
  exception when others then
    param_msg_error := dbms_utility.format_error_stack || ' ' || dbms_utility.format_error_backtrace || '@#$%400';
  end insert_ttemprpt_thisclss_sub;

  procedure insert_ttemprpt_tcoursugg(obj_data in json) is
    v_numseq            number := 0;
    v_seq               number := 1;
    v_descomment        varchar(1000);

  begin
    begin
      select nvl(max(numseq), 0)
        into v_numseq
        from ttemprpt
       where codempid = global_v_codempid
         and upper(codapp)   = upper(p_codapp)||'_SUB_2';
    exception when no_data_found then
      null;
    end;

    begin
      select nvl(max(item1), 0)
        into v_seq
        from ttemprpt
       where codempid = global_v_codempid
         and codapp   = upper(p_codapp)||'_SUB_2'
         and item3 = p_codcours
         and item4 = p_dteyear
         and item5 = p_numclseq;
    exception when no_data_found then
      null;
    end;
    v_numseq                    := v_numseq + 1;
    v_seq                       := v_seq + 1;
    v_descomment                := hcm_util.get_string(obj_data, 'descomment');

    begin
      insert
        into ttemprpt
           (
             codempid, codapp, numseq,
             item1, item2, item3, item4, item5,
             ITEM6
           )
      values
           (
             global_v_codempid, upper(p_codapp)||'_SUB_2', v_numseq,
             v_seq, p_codempid, p_codcours, p_dteyear, p_numclseq,
             v_descomment
           );
    exception when others then
      null;
    end;
  exception when others then
    param_msg_error := dbms_utility.format_error_stack || ' ' || dbms_utility.format_error_backtrace || '@#$%400';
  end insert_ttemprpt_tcoursugg;

  procedure insert_ttemprpt_tcoursadj(obj_data in json) is
    v_numseq            number := 0;
    v_seq               number := 1;
    v_descomment        varchar(1000);

  begin
    begin
      select nvl(max(numseq), 0)
        into v_numseq
        from ttemprpt
       where codempid = global_v_codempid
         and upper(codapp)   = upper(p_codapp)||'_SUB_3';
    exception when no_data_found then
      null;
    end;

    begin
      select nvl(max(item1), 0)
        into v_seq
        from ttemprpt
       where codempid = global_v_codempid
         and codapp   = upper(p_codapp)||'_SUB_3'
         and item3 = p_codcours
         and item4 = p_dteyear
         and item5 = p_numclseq;
    exception when no_data_found then
      null;
    end;
    v_numseq                    := v_numseq + 1;
    v_seq                       := v_seq + 1;
    v_descomment                := hcm_util.get_string(obj_data, 'descomment');

    begin
      insert
        into ttemprpt
           (
             codempid, codapp, numseq,
             item1, item2, item3, item4, item5,
             ITEM6
           )
      values
           (
             global_v_codempid, upper(p_codapp)||'_SUB_3', v_numseq,
             v_seq, p_codempid, p_codcours, p_dteyear, p_numclseq,
             v_descomment
           );
    exception when others then
      null;
    end;
  exception when others then
    param_msg_error := dbms_utility.format_error_stack || ' ' || dbms_utility.format_error_backtrace || '@#$%400';
  end insert_ttemprpt_tcoursadj;


  procedure insert_ttemprpt_tcoursrecm(obj_data in json) is
    v_numseq            number := 0;
    v_seq               number := 1;
    v_descomment        varchar(1000);

  begin
    begin
      select nvl(max(numseq), 0)
        into v_numseq
        from ttemprpt
       where codempid = global_v_codempid
         and upper(codapp)   = upper(p_codapp)||'_SUB_4';
    exception when no_data_found then
      null;
    end;

    begin
      select nvl(max(item1), 0)
        into v_seq
        from ttemprpt
       where codempid = global_v_codempid
         and codapp   = upper(p_codapp)||'_SUB_4'
         and item3 = p_codcours
         and item4 = p_dteyear
         and item5 = p_numclseq;
    exception when no_data_found then
      null;
    end;
    v_numseq                    := v_numseq + 1;
    v_seq                       := v_seq + 1;
    v_descomment                := hcm_util.get_string(obj_data, 'descomment');

    begin
      insert
        into ttemprpt
           (
             codempid, codapp, numseq,
             item1, item2, item3, item4, item5,
             ITEM6
           )
      values
           (
             global_v_codempid, upper(p_codapp)||'_SUB_4', v_numseq,
             v_seq, p_codempid, p_codcours, p_dteyear, p_numclseq,
             v_descomment
           );
    exception when others then
      null;
    end;
  exception when others then
    param_msg_error := dbms_utility.format_error_stack || ' ' || dbms_utility.format_error_backtrace || '@#$%400';
  end insert_ttemprpt_tcoursrecm;

----------------------------------------------------------------------------------------

end M_HRTRZ1X;
/
COMMIT;